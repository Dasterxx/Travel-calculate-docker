<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.nikita.api.dto.AgreementDtoIntegrationTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2025-08-21T09:42:12" hostname="DESKTOP-CB9JCRQ" time="0.41">
  <properties/>
  <testcase name="shouldReturnErrorWhenAgreementDateToIsNull()" classname="org.nikita.api.dto.AgreementDtoIntegrationTest" time="0.39"/>
  <testcase name="shouldReturnErrorWhenCountryIsNull()" classname="org.nikita.api.dto.AgreementDtoIntegrationTest" time="0.007"/>
  <testcase name="shouldReturnErrorWhenAgreementDateFromIsInThePast()" classname="org.nikita.api.dto.AgreementDtoIntegrationTest" time="0.006"/>
  <testcase name="shouldReturnErrorWhenAgreementDateFromIsNull()" classname="org.nikita.api.dto.AgreementDtoIntegrationTest" time="0.005"/>
  <system-out><![CDATA[12:42:05.590 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [org.nikita.api.dto.AgreementDtoIntegrationTest]: AgreementDtoIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
12:42:05.708 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration org.nikita.InsuranceApplication for test class org.nikita.api.dto.AgreementDtoIntegrationTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.5)

2025-08-21T12:42:06.014+03:00  INFO 1236 --- [    Test worker] o.n.api.dto.AgreementDtoIntegrationTest  : Starting AgreementDtoIntegrationTest using Java 21.0.5 with PID 1236 (started by User in C:\Users\User\IdeaProjects\Travel-Insurance-Calculator\backend\application_V2\insurance-calculator-app)
2025-08-21T12:42:06.015+03:00  INFO 1236 --- [    Test worker] o.n.api.dto.AgreementDtoIntegrationTest  : The following 1 profile is active: "test"
2025-08-21T12:42:06.652+03:00  INFO 1236 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-21T12:42:06.699+03:00  INFO 1236 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 41 ms. Found 10 JPA repository interfaces.
2025-08-21T12:42:07.703+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-21T12:42:08.010+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-21T12:42:08.012+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-21T12:42:08.210+03:00  INFO 1236 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-21T12:42:08.432+03:00  INFO 1236 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2025-08-21T12:42:08.524+03:00  INFO 1236 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-21T12:42:08.731+03:00  INFO 1236 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-21T12:42:09.687+03:00  INFO 1236 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists agreement cascade 
Hibernate: 
    drop table if exists agreement_countries cascade 
Hibernate: 
    drop table if exists agreement_proposals cascade 
Hibernate: 
    drop table if exists agreement_risks cascade 
Hibernate: 
    drop table if exists agreements_xml_export cascade 
Hibernate: 
    drop table if exists country cascade 
Hibernate: 
    drop table if exists country_default_day_rate cascade 
Hibernate: 
    drop table if exists password_reset_token cascade 
Hibernate: 
    drop table if exists persons cascade 
Hibernate: 
    drop table if exists refresh_token cascade 
Hibernate: 
    drop table if exists role cascade 
Hibernate: 
    drop table if exists user_roles cascade 
Hibernate: 
    drop table if exists verification_token cascade 
Hibernate: 
    create table agreement (
        agreement_premium numeric(38,2),
        insurance_limit numeric(38,2),
        agreement_date_from timestamp(6),
        agreement_date_to timestamp(6),
        id bigint generated by default as identity,
        uuid uuid not null,
        primary key (id)
    )
Hibernate: 
    create table agreement_countries (
        agreement_id bigint not null,
        country_id bigint not null
    )
Hibernate: 
    create table agreement_proposals (
        already_generated char(1) not null check (already_generated in ('N','Y')),
        date_from timestamp(6) not null,
        date_to timestamp(6) not null,
        id bigint generated by default as identity,
        agreement_uuid uuid,
        person_first_name varchar(255) not null,
        person_last_name varchar(255) not null,
        proposal_file_path varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table agreement_risks (
        agreement_id bigint not null,
        risk varchar(255)
    )
Hibernate: 
    create table agreements_xml_export (
        already_exported boolean not null,
        id bigint generated by default as identity,
        agreement_uuid varchar(36) not null unique,
        primary key (id)
    )
Hibernate: 
    create table country (
        id bigint generated by default as identity,
        country_code varchar(255) not null unique,
        country_name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table country_default_day_rate (
        default_day_rate numeric(38,2) not null,
        id integer generated by default as identity,
        country_name varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    create table password_reset_token (
        expiration_date timestamp(6),
        id bigint generated by default as identity,
        user_id bigint,
        token varchar(255),
        primary key (id)
    )
Hibernate: 
    create table persons (
        birth_date date not null,
        black_listed boolean not null,
        is_enabled boolean not null,
        agreement_id bigint,
        id bigint generated by default as identity,
        email varchar(255),
        first_name varchar(255) not null,
        gender varchar(255),
        last_name varchar(255) not null,
        password varchar(255),
        person_code varchar(255) not null,
        primary key (id),
        unique (first_name, last_name, person_code)
    )
Hibernate: 
    create table refresh_token (
        expiry_date timestamp(6),
        id bigint generated by default as identity,
        user_id bigint unique,
        token varchar(255) unique,
        primary key (id)
    )
Hibernate: 
    create table role (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id),
        unique (name)
    )
Hibernate: 
    create table user_roles (
        role_id bigint not null,
        user_id bigint not null
    )
Hibernate: 
    create table verification_token (
        expiration_date timestamp(6),
        id bigint generated by default as identity,
        user_id bigint,
        token varchar(255),
        primary key (id)
    )
Hibernate: 
    alter table if exists agreement_countries 
       add constraint FKb3vlrcfevfu0yev7apmp9mdof 
       foreign key (country_id) 
       references country
Hibernate: 
    alter table if exists agreement_countries 
       add constraint FKnmqj2otf0xnviy7gnt5k2ueb1 
       foreign key (agreement_id) 
       references agreement
Hibernate: 
    alter table if exists agreement_risks 
       add constraint FK8uooqi970alchskpgl7oxmlsf 
       foreign key (agreement_id) 
       references agreement
Hibernate: 
    alter table if exists password_reset_token 
       add constraint FKo04psjdr9t9w9kh9qm5f1pkh5 
       foreign key (user_id) 
       references persons
Hibernate: 
    alter table if exists persons 
       add constraint FKci0joxe418gq8f9j4qh8adgkt 
       foreign key (agreement_id) 
       references agreement
Hibernate: 
    alter table if exists refresh_token 
       add constraint FKdl44lsavd7ahmdorqptjybuem 
       foreign key (user_id) 
       references persons
Hibernate: 
    alter table if exists user_roles 
       add constraint FKrhfovtciq1l558cw6udg0h0d3 
       foreign key (role_id) 
       references role
Hibernate: 
    alter table if exists user_roles 
       add constraint FKhqwikqsvr67y0u1mddk8lpkae 
       foreign key (user_id) 
       references persons
Hibernate: 
    alter table if exists verification_token 
       add constraint FKl36ub1ot7o0h52yuvmw7tl3bm 
       foreign key (user_id) 
       references persons
2025-08-21T12:42:09.743+03:00  INFO 1236 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-21T12:42:10.263+03:00  INFO 1236 --- [    Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-21T12:42:11.103+03:00  WARN 1236 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-21T12:42:11.382+03:00  INFO 1236 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1c419713, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@29701f1f, org.springframework.security.web.context.SecurityContextHolderFilter@73e6d475, org.springframework.security.web.header.HeaderWriterFilter@3c5077f6, org.springframework.web.filter.CorsFilter@2c36c62a, org.springframework.security.web.authentication.logout.LogoutFilter@351aa7f, org.nikita.core.security.jwt.AuthTokenFilter@6333ac03, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7d5caf3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@456a0e9e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a273e53, org.springframework.security.web.session.SessionManagementFilter@7aaec50e, org.springframework.security.web.access.ExceptionTranslationFilter@882c166, org.springframework.security.web.access.intercept.AuthorizationFilter@73b8c79b]
2025-08-21T12:42:11.915+03:00  INFO 1236 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-21T12:42:11.969+03:00  INFO 1236 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-21T12:42:11.970+03:00  INFO 1236 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-21T12:42:11.971+03:00  INFO 1236 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2025-08-21T12:42:11.995+03:00  INFO 1236 --- [   scheduling-1] o.nikita.jobs.AgreementXmlExporterJob    : Starting AgreementXmlExporterJob with thread pool size 4
2025-08-21T12:42:11.995+03:00  INFO 1236 --- [    Test worker] o.n.api.dto.AgreementDtoIntegrationTest  : Started AgreementDtoIntegrationTest in 6.174 seconds (process running for 7.725)
Hibernate: 
    select
        ae1_0.uuid 
    from
        agreement ae1_0
Hibernate: 
    select
        count(*) 
    from
        role r1_0
2025-08-21T12:42:12.090+03:00  INFO 1236 --- [   scheduling-1] o.nikita.jobs.AgreementXmlExporterJob    : No agreements found to export.
Hibernate: 
    insert 
    into
        role
        (name, id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        role
        (name, id) 
    values
        (?, default)
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
Hibernate: 
    select
        count(*) 
    from
        persons pe1_0
Hibernate: 
    insert 
    into
        persons
        (agreement_id, birth_date, black_listed, email, first_name, gender, is_enabled, last_name, password, person_code, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        persons
        (agreement_id, birth_date, black_listed, email, first_name, gender, is_enabled, last_name, password, person_code, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        persons
        (agreement_id, birth_date, black_listed, email, first_name, gender, is_enabled, last_name, password, person_code, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        count(*) 
    from
        country ce1_0
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
2025-08-21T12:42:12.760+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Validating country for medical risk. Selected risks: [TRAVEL_MEDICAL], Country : [SPAIN]
2025-08-21T12:42:12.760+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Country validation passed.
2025-08-21T12:42:12.760+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : Validate agreementDateFrom
2025-08-21T12:42:12.760+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : AgreementDateFrom is 2028-01-01T00:00
2025-08-21T12:42:12.760+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Validating selected risks: [TRAVEL_MEDICAL]
2025-08-21T12:42:12.760+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : Risk 'TRAVEL_MEDICAL' valid? true
2025-08-21T12:42:12.760+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Selected risks are valid.
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
2025-08-21T12:42:12.772+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Validating country for medical risk. Selected risks: [TRAVEL_MEDICAL], Country : []
2025-08-21T12:42:12.772+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Country validation passed.
2025-08-21T12:42:12.772+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : Validate agreementDateFrom
2025-08-21T12:42:12.772+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : AgreementDateFrom is 2028-01-01T00:00
2025-08-21T12:42:12.772+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Validating selected risks: [TRAVEL_MEDICAL]
2025-08-21T12:42:12.773+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : Risk 'TRAVEL_MEDICAL' valid? true
2025-08-21T12:42:12.773+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Selected risks are valid.
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
2025-08-21T12:42:12.778+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Validating country for medical risk. Selected risks: [TRAVEL_MEDICAL], Country : [SPAIN]
2025-08-21T12:42:12.779+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Country validation passed.
2025-08-21T12:42:12.779+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : Validate agreementDateFrom
2025-08-21T12:42:12.779+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : AgreementDateFrom is 2020-01-01T00:00
2025-08-21T12:42:12.779+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Validating selected risks: [TRAVEL_MEDICAL]
2025-08-21T12:42:12.779+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : Risk 'TRAVEL_MEDICAL' valid? true
2025-08-21T12:42:12.779+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Selected risks are valid.
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
2025-08-21T12:42:12.784+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Validating country for medical risk. Selected risks: [TRAVEL_MEDICAL], Country : [SPAIN]
2025-08-21T12:42:12.785+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Country validation passed.
2025-08-21T12:42:12.785+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : Validate agreementDateFrom
2025-08-21T12:42:12.785+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : AgreementDateFrom is null
2025-08-21T12:42:12.785+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Validating selected risks: [TRAVEL_MEDICAL]
2025-08-21T12:42:12.785+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : Risk 'TRAVEL_MEDICAL' valid? true
2025-08-21T12:42:12.785+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Selected risks are valid.
]]></system-out>
  <system-err><![CDATA[Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build as described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
WARNING: A Java agent has been loaded dynamically (C:\Users\User\.gradle\caches\modules-2\files-2.1\net.bytebuddy\byte-buddy-agent\1.14.13\979ce25f7d3096a2e82214ba7dc972a05ce7a171\byte-buddy-agent-1.14.13.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
</testsuite>
