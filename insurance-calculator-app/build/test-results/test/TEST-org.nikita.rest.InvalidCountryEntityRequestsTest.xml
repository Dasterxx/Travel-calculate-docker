<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.nikita.rest.InvalidCountryEntityRequestsTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2025-08-21T09:42:19" hostname="DESKTOP-CB9JCRQ" time="3.287">
  <properties/>
  <testcase name="shouldReturnErrorWhenCountryIsEmpty()" classname="org.nikita.rest.InvalidCountryEntityRequestsTest" time="0.371"/>
  <testcase name="shouldReturnErrorWhenCountryIsNull()" classname="org.nikita.rest.InvalidCountryEntityRequestsTest" time="0.037"/>
  <testcase name="shouldReturnErrorWhenCountryIsMissing()" classname="org.nikita.rest.InvalidCountryEntityRequestsTest" time="0.025"/>
  <testcase name="shouldPassWhenCountryIsValid()" classname="org.nikita.rest.InvalidCountryEntityRequestsTest" time="0.043"/>
  <system-out><![CDATA[2025-08-21T12:42:18.358+03:00  INFO 1236 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.nikita.rest.InvalidCountryEntityRequestsTest]: InvalidCountryEntityRequestsTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-21T12:42:18.371+03:00  INFO 1236 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration org.nikita.InsuranceApplication for test class org.nikita.rest.InvalidCountryEntityRequestsTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.5)

2025-08-21T12:42:18.393+03:00  INFO 1236 --- [    Test worker] o.n.r.InvalidCountryEntityRequestsTest   : Starting InvalidCountryEntityRequestsTest using Java 21.0.5 with PID 1236 (started by User in C:\Users\User\IdeaProjects\Travel-Insurance-Calculator\backend\application_V2\insurance-calculator-app)
2025-08-21T12:42:18.393+03:00  INFO 1236 --- [    Test worker] o.n.r.InvalidCountryEntityRequestsTest   : The following 1 profile is active: "test"
2025-08-21T12:42:18.570+03:00  INFO 1236 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-21T12:42:18.581+03:00  INFO 1236 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 10 JPA repository interfaces.
2025-08-21T12:42:18.677+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Starting...
2025-08-21T12:42:18.686+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-4 - Added connection conn30: url=jdbc:h2:mem:testdb user=SA
2025-08-21T12:42:18.686+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Start completed.
2025-08-21T12:42:18.699+03:00  INFO 1236 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-21T12:42:18.705+03:00  INFO 1236 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-21T12:42:18.710+03:00  INFO 1236 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-21T12:42:18.887+03:00  INFO 1236 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists agreement cascade 
Hibernate: 
    drop table if exists agreement_countries cascade 
Hibernate: 
    drop table if exists agreement_proposals cascade 
Hibernate: 
    drop table if exists agreement_risks cascade 
Hibernate: 
    drop table if exists agreements_xml_export cascade 
Hibernate: 
    drop table if exists country cascade 
Hibernate: 
    drop table if exists country_default_day_rate cascade 
Hibernate: 
    drop table if exists password_reset_token cascade 
Hibernate: 
    drop table if exists persons cascade 
Hibernate: 
    drop table if exists refresh_token cascade 
Hibernate: 
    drop table if exists role cascade 
Hibernate: 
    drop table if exists user_roles cascade 
Hibernate: 
    drop table if exists verification_token cascade 
Hibernate: 
    create table agreement (
        agreement_premium numeric(38,2),
        insurance_limit numeric(38,2),
        agreement_date_from timestamp(6),
        agreement_date_to timestamp(6),
        id bigint generated by default as identity,
        uuid uuid not null,
        primary key (id)
    )
Hibernate: 
    create table agreement_countries (
        agreement_id bigint not null,
        country_id bigint not null
    )
Hibernate: 
    create table agreement_proposals (
        already_generated char(1) not null check (already_generated in ('N','Y')),
        date_from timestamp(6) not null,
        date_to timestamp(6) not null,
        id bigint generated by default as identity,
        agreement_uuid uuid,
        person_first_name varchar(255) not null,
        person_last_name varchar(255) not null,
        proposal_file_path varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table agreement_risks (
        agreement_id bigint not null,
        risk varchar(255)
    )
Hibernate: 
    create table agreements_xml_export (
        already_exported boolean not null,
        id bigint generated by default as identity,
        agreement_uuid varchar(36) not null unique,
        primary key (id)
    )
Hibernate: 
    create table country (
        id bigint generated by default as identity,
        country_code varchar(255) not null unique,
        country_name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table country_default_day_rate (
        default_day_rate numeric(38,2) not null,
        id integer generated by default as identity,
        country_name varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    create table password_reset_token (
        expiration_date timestamp(6),
        id bigint generated by default as identity,
        user_id bigint,
        token varchar(255),
        primary key (id)
    )
Hibernate: 
    create table persons (
        birth_date date not null,
        black_listed boolean not null,
        is_enabled boolean not null,
        agreement_id bigint,
        id bigint generated by default as identity,
        email varchar(255),
        first_name varchar(255) not null,
        gender varchar(255),
        last_name varchar(255) not null,
        password varchar(255),
        person_code varchar(255) not null,
        primary key (id),
        unique (first_name, last_name, person_code)
    )
Hibernate: 
    create table refresh_token (
        expiry_date timestamp(6),
        id bigint generated by default as identity,
        user_id bigint unique,
        token varchar(255) unique,
        primary key (id)
    )
Hibernate: 
    create table role (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id),
        unique (name)
    )
Hibernate: 
    create table user_roles (
        role_id bigint not null,
        user_id bigint not null
    )
Hibernate: 
    create table verification_token (
        expiration_date timestamp(6),
        id bigint generated by default as identity,
        user_id bigint,
        token varchar(255),
        primary key (id)
    )
Hibernate: 
    alter table if exists agreement_countries 
       add constraint FKb3vlrcfevfu0yev7apmp9mdof 
       foreign key (country_id) 
       references country
Hibernate: 
    alter table if exists agreement_countries 
       add constraint FKnmqj2otf0xnviy7gnt5k2ueb1 
       foreign key (agreement_id) 
       references agreement
Hibernate: 
    alter table if exists agreement_risks 
       add constraint FK8uooqi970alchskpgl7oxmlsf 
       foreign key (agreement_id) 
       references agreement
Hibernate: 
    alter table if exists password_reset_token 
       add constraint FKo04psjdr9t9w9kh9qm5f1pkh5 
       foreign key (user_id) 
       references persons
Hibernate: 
    alter table if exists persons 
       add constraint FKci0joxe418gq8f9j4qh8adgkt 
       foreign key (agreement_id) 
       references agreement
Hibernate: 
    alter table if exists refresh_token 
       add constraint FKdl44lsavd7ahmdorqptjybuem 
       foreign key (user_id) 
       references persons
Hibernate: 
    alter table if exists user_roles 
       add constraint FKrhfovtciq1l558cw6udg0h0d3 
       foreign key (role_id) 
       references role
Hibernate: 
    alter table if exists user_roles 
       add constraint FKhqwikqsvr67y0u1mddk8lpkae 
       foreign key (user_id) 
       references persons
Hibernate: 
    alter table if exists verification_token 
       add constraint FKl36ub1ot7o0h52yuvmw7tl3bm 
       foreign key (user_id) 
       references persons
2025-08-21T12:42:18.900+03:00  INFO 1236 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-21T12:42:19.080+03:00  WARN 1236 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-21T12:42:19.134+03:00  INFO 1236 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1a848531, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7732a714, org.springframework.security.web.context.SecurityContextHolderFilter@5467087e, org.springframework.security.web.header.HeaderWriterFilter@7a37901f, org.springframework.web.filter.CorsFilter@346e9fc, org.springframework.security.web.authentication.logout.LogoutFilter@154f129f, org.nikita.core.security.jwt.AuthTokenFilter@41ac10f2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@403681e1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6474690, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36f724e5, org.springframework.security.web.session.SessionManagementFilter@343960d9, org.springframework.security.web.access.ExceptionTranslationFilter@bb3fec5, org.springframework.security.web.access.intercept.AuthorizationFilter@5d4d1928]
2025-08-21T12:42:19.238+03:00  INFO 1236 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-21T12:42:19.267+03:00  INFO 1236 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-21T12:42:19.268+03:00  INFO 1236 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-21T12:42:19.268+03:00  INFO 1236 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2025-08-21T12:42:19.276+03:00  INFO 1236 --- [   scheduling-1] o.nikita.jobs.AgreementXmlExporterJob    : Starting AgreementXmlExporterJob with thread pool size 4
2025-08-21T12:42:19.276+03:00  INFO 1236 --- [    Test worker] o.n.r.InvalidCountryEntityRequestsTest   : Started InvalidCountryEntityRequestsTest in 0.902 seconds (process running for 15.006)
Hibernate: 
    select
        ae1_0.uuid 
    from
        agreement ae1_0
Hibernate: 
    select
        count(*) 
    from
        role r1_0
Hibernate: 
    insert 
    into
        role
        (name, id) 
    values
        (?, default)
2025-08-21T12:42:19.280+03:00  INFO 1236 --- [   scheduling-1] o.nikita.jobs.AgreementXmlExporterJob    : No agreements found to export.
Hibernate: 
    insert 
    into
        role
        (name, id) 
    values
        (?, default)
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
Hibernate: 
    select
        count(*) 
    from
        persons pe1_0
Hibernate: 
    insert 
    into
        persons
        (agreement_id, birth_date, black_listed, email, first_name, gender, is_enabled, last_name, password, person_code, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        persons
        (agreement_id, birth_date, black_listed, email, first_name, gender, is_enabled, last_name, password, person_code, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        persons
        (agreement_id, birth_date, black_listed, email, first_name, gender, is_enabled, last_name, password, person_code, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        count(*) 
    from
        country ce1_0
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
2025-08-21T12:42:19.760+03:00  INFO 1236 --- [    Test worker] .r.v.TravelCalculatePremiumRequestLogger : REQUEST: {"agreement":{"agreementDateFrom":"2028-03-15T00:00:00","agreementDateTo":"2028-03-31T23:59:59","countriesToVisit":[""],"insuranceLimit":10000,"agreementPremium":null,"selectedRisks":["TRAVEL_MEDICAL"],"uuid":"2f998026-55f7-4686-8501-c2cbb87314b1","persons":[{"personCode":"A-12345","firstName":null,"lastName":null,"birthDate":"1950-03-15","risks":[],"personPremium":null,"blackListed":false,"password":"StrongPass123","email":"vasja@example.com","gender":"Male","roles":["ROLE_USER"],"verificationTokens":[],"isEnabled":false},{"personCode":"B-54321","firstName":null,"lastName":null,"birthDate":"2010-02-23","risks":[],"personPremium":null,"blackListed":false,"password":"AnotherPass456","email":"petja@example.com","gender":"Male","roles":["ROLE_USER"],"verificationTokens":[],"isEnabled":false},{"personCode":"C-67890","firstName":null,"lastName":null,"birthDate":"1975-01-01","risks":[],"personPremium":null,"blackListed":false,"password":"Pass789Strong","email":"sergej@example.com","gender":"Male","roles":["ROLE_ADMIN"],"verificationTokens":[],"isEnabled":false}]}}
2025-08-21T12:42:19.761+03:00  INFO 1236 --- [    Test worker] .r.v.TravelCalculatePremiumRequestLogger : REQUEST LOGGING TIME: 34 ms
2025-08-21T12:42:19.762+03:00  INFO 1236 --- [    Test worker] .n.c.s.TravelCalculatePremiumServiceImpl : Calculating premium for agreement: AgreementDto(agreementDateFrom=2028-03-15T00:00, agreementDateTo=2028-03-31T23:59:59, countriesToVisit=[], insuranceLimit=10000, agreementPremium=null, selectedRisks=[TRAVEL_MEDICAL], persons=[PersonDto(personCode=A-12345, firstName=null, lastName=null, birthDate=1950-03-15, risks=[], personPremium=null, blackListed=false, password=StrongPass123, isEnabled=false, email=vasja@example.com, gender=Male, roles=[ROLE_USER], verificationTokens=[]), PersonDto(personCode=B-54321, firstName=null, lastName=null, birthDate=2010-02-23, risks=[], personPremium=null, blackListed=false, password=AnotherPass456, isEnabled=false, email=petja@example.com, gender=Male, roles=[ROLE_USER], verificationTokens=[]), PersonDto(personCode=C-67890, firstName=null, lastName=null, birthDate=1975-01-01, risks=[], personPremium=null, blackListed=false, password=Pass789Strong, isEnabled=false, email=sergej@example.com, gender=Male, roles=[ROLE_ADMIN], verificationTokens=[])], uuid=2f998026-55f7-4686-8501-c2cbb87314b1)
2025-08-21T12:42:19.763+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Validating country for medical risk. Selected risks: [TRAVEL_MEDICAL], Country : []
2025-08-21T12:42:19.763+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Country validation passed.
2025-08-21T12:42:19.763+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : Validate agreementDateFrom
2025-08-21T12:42:19.763+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : AgreementDateFrom is 2028-03-15T00:00
2025-08-21T12:42:19.763+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Validating selected risks: [TRAVEL_MEDICAL]
2025-08-21T12:42:19.763+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : Risk 'TRAVEL_MEDICAL' valid? true
2025-08-21T12:42:19.763+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Selected risks are valid.
2025-08-21T12:42:19.763+03:00  INFO 1236 --- [    Test worker] .n.c.s.TravelCalculatePremiumServiceImpl : Validation result: 1 errors found
2025-08-21T12:42:19.763+03:00  WARN 1236 --- [    Test worker] o.n.core.service.TravelResponseBuilder   : Building response with validation errors: [ValidationErrorDto[errorCode=countriesToVisit, description=ERROR_CODE_23]]
2025-08-21T12:42:19.771+03:00  INFO 1236 --- [    Test worker] r.v.TravelCalculatePremiumResponseLogger : RESPONSE: {"errors":[{"errorCode":"countriesToVisit","description":"ERROR_CODE_23"}],"agreement":{"agreementDateFrom":null,"agreementDateTo":null,"countriesToVisit":[],"insuranceLimit":null,"agreementPremium":null,"selectedRisks":[],"uuid":null,"persons":[]}}
2025-08-21T12:42:19.771+03:00  INFO 1236 --- [    Test worker] r.v.TravelCalculatePremiumResponseLogger : RESPONSE TIME: 6ms
2025-08-21T12:42:19.771+03:00  INFO 1236 --- [    Test worker] org.javaguru.travel.insurance.app        : Some general application log message
2025-08-21T12:42:19.829+03:00  INFO 1236 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: 
    drop table if exists agreement cascade 
Hibernate: 
    drop table if exists agreement_countries cascade 
Hibernate: 
    drop table if exists agreement_proposals cascade 
Hibernate: 
    drop table if exists agreement_risks cascade 
Hibernate: 
    drop table if exists agreements_xml_export cascade 
Hibernate: 
    drop table if exists country cascade 
Hibernate: 
    drop table if exists country_default_day_rate cascade 
Hibernate: 
    drop table if exists password_reset_token cascade 
Hibernate: 
    drop table if exists persons cascade 
Hibernate: 
    drop table if exists refresh_token cascade 
Hibernate: 
    drop table if exists role cascade 
Hibernate: 
    drop table if exists user_roles cascade 
Hibernate: 
    drop table if exists verification_token cascade 
2025-08-21T12:42:19.838+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown initiated...
2025-08-21T12:42:19.841+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.5)

2025-08-21T12:42:19.864+03:00  INFO 1236 --- [    Test worker] o.n.r.InvalidCountryEntityRequestsTest   : Starting InvalidCountryEntityRequestsTest using Java 21.0.5 with PID 1236 (started by User in C:\Users\User\IdeaProjects\Travel-Insurance-Calculator\backend\application_V2\insurance-calculator-app)
2025-08-21T12:42:19.864+03:00  INFO 1236 --- [    Test worker] o.n.r.InvalidCountryEntityRequestsTest   : The following 1 profile is active: "test"
2025-08-21T12:42:20.039+03:00  INFO 1236 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-21T12:42:20.049+03:00  INFO 1236 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 10 JPA repository interfaces.
2025-08-21T12:42:20.133+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Starting...
2025-08-21T12:42:20.137+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-5 - Added connection conn40: url=jdbc:h2:mem:testdb user=SA
2025-08-21T12:42:20.137+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Start completed.
2025-08-21T12:42:20.146+03:00  INFO 1236 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-21T12:42:20.148+03:00  INFO 1236 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-21T12:42:20.153+03:00  INFO 1236 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-21T12:42:20.292+03:00  INFO 1236 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists agreement cascade 
Hibernate: 
    drop table if exists agreement_countries cascade 
Hibernate: 
    drop table if exists agreement_proposals cascade 
Hibernate: 
    drop table if exists agreement_risks cascade 
Hibernate: 
    drop table if exists agreements_xml_export cascade 
Hibernate: 
    drop table if exists country cascade 
Hibernate: 
    drop table if exists country_default_day_rate cascade 
Hibernate: 
    drop table if exists password_reset_token cascade 
Hibernate: 
    drop table if exists persons cascade 
Hibernate: 
    drop table if exists refresh_token cascade 
Hibernate: 
    drop table if exists role cascade 
Hibernate: 
    drop table if exists user_roles cascade 
Hibernate: 
    drop table if exists verification_token cascade 
Hibernate: 
    create table agreement (
        agreement_premium numeric(38,2),
        insurance_limit numeric(38,2),
        agreement_date_from timestamp(6),
        agreement_date_to timestamp(6),
        id bigint generated by default as identity,
        uuid uuid not null,
        primary key (id)
    )
Hibernate: 
    create table agreement_countries (
        agreement_id bigint not null,
        country_id bigint not null
    )
Hibernate: 
    create table agreement_proposals (
        already_generated char(1) not null check (already_generated in ('N','Y')),
        date_from timestamp(6) not null,
        date_to timestamp(6) not null,
        id bigint generated by default as identity,
        agreement_uuid uuid,
        person_first_name varchar(255) not null,
        person_last_name varchar(255) not null,
        proposal_file_path varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table agreement_risks (
        agreement_id bigint not null,
        risk varchar(255)
    )
Hibernate: 
    create table agreements_xml_export (
        already_exported boolean not null,
        id bigint generated by default as identity,
        agreement_uuid varchar(36) not null unique,
        primary key (id)
    )
Hibernate: 
    create table country (
        id bigint generated by default as identity,
        country_code varchar(255) not null unique,
        country_name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table country_default_day_rate (
        default_day_rate numeric(38,2) not null,
        id integer generated by default as identity,
        country_name varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    create table password_reset_token (
        expiration_date timestamp(6),
        id bigint generated by default as identity,
        user_id bigint,
        token varchar(255),
        primary key (id)
    )
Hibernate: 
    create table persons (
        birth_date date not null,
        black_listed boolean not null,
        is_enabled boolean not null,
        agreement_id bigint,
        id bigint generated by default as identity,
        email varchar(255),
        first_name varchar(255) not null,
        gender varchar(255),
        last_name varchar(255) not null,
        password varchar(255),
        person_code varchar(255) not null,
        primary key (id),
        unique (first_name, last_name, person_code)
    )
Hibernate: 
    create table refresh_token (
        expiry_date timestamp(6),
        id bigint generated by default as identity,
        user_id bigint unique,
        token varchar(255) unique,
        primary key (id)
    )
Hibernate: 
    create table role (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id),
        unique (name)
    )
Hibernate: 
    create table user_roles (
        role_id bigint not null,
        user_id bigint not null
    )
Hibernate: 
    create table verification_token (
        expiration_date timestamp(6),
        id bigint generated by default as identity,
        user_id bigint,
        token varchar(255),
        primary key (id)
    )
Hibernate: 
    alter table if exists agreement_countries 
       add constraint FKb3vlrcfevfu0yev7apmp9mdof 
       foreign key (country_id) 
       references country
Hibernate: 
    alter table if exists agreement_countries 
       add constraint FKnmqj2otf0xnviy7gnt5k2ueb1 
       foreign key (agreement_id) 
       references agreement
Hibernate: 
    alter table if exists agreement_risks 
       add constraint FK8uooqi970alchskpgl7oxmlsf 
       foreign key (agreement_id) 
       references agreement
Hibernate: 
    alter table if exists password_reset_token 
       add constraint FKo04psjdr9t9w9kh9qm5f1pkh5 
       foreign key (user_id) 
       references persons
Hibernate: 
    alter table if exists persons 
       add constraint FKci0joxe418gq8f9j4qh8adgkt 
       foreign key (agreement_id) 
       references agreement
Hibernate: 
    alter table if exists refresh_token 
       add constraint FKdl44lsavd7ahmdorqptjybuem 
       foreign key (user_id) 
       references persons
Hibernate: 
    alter table if exists user_roles 
       add constraint FKrhfovtciq1l558cw6udg0h0d3 
       foreign key (role_id) 
       references role
Hibernate: 
    alter table if exists user_roles 
       add constraint FKhqwikqsvr67y0u1mddk8lpkae 
       foreign key (user_id) 
       references persons
Hibernate: 
    alter table if exists verification_token 
       add constraint FKl36ub1ot7o0h52yuvmw7tl3bm 
       foreign key (user_id) 
       references persons
2025-08-21T12:42:20.302+03:00  INFO 1236 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-21T12:42:20.496+03:00  WARN 1236 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-21T12:42:20.546+03:00  INFO 1236 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2ba330c8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d65bb6b, org.springframework.security.web.context.SecurityContextHolderFilter@2abeb84c, org.springframework.security.web.header.HeaderWriterFilter@3c2f416c, org.springframework.web.filter.CorsFilter@7ce3ef98, org.springframework.security.web.authentication.logout.LogoutFilter@4987e6f9, org.nikita.core.security.jwt.AuthTokenFilter@2e9680e2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f7e303e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@691c309c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@57aaf079, org.springframework.security.web.session.SessionManagementFilter@6d924abc, org.springframework.security.web.access.ExceptionTranslationFilter@34c6206d, org.springframework.security.web.access.intercept.AuthorizationFilter@1fb68a8f]
2025-08-21T12:42:20.626+03:00  INFO 1236 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-21T12:42:20.641+03:00  INFO 1236 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-21T12:42:20.641+03:00  INFO 1236 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-21T12:42:20.642+03:00  INFO 1236 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2025-08-21T12:42:20.647+03:00  INFO 1236 --- [   scheduling-1] o.nikita.jobs.AgreementXmlExporterJob    : Starting AgreementXmlExporterJob with thread pool size 4
2025-08-21T12:42:20.647+03:00  INFO 1236 --- [    Test worker] o.n.r.InvalidCountryEntityRequestsTest   : Started InvalidCountryEntityRequestsTest in 0.804 seconds (process running for 16.377)
Hibernate: 
    select
        ae1_0.uuid 
    from
        agreement ae1_0
Hibernate: 
    select
        count(*) 
    from
        role r1_0
2025-08-21T12:42:20.649+03:00  INFO 1236 --- [   scheduling-1] o.nikita.jobs.AgreementXmlExporterJob    : No agreements found to export.
Hibernate: 
    insert 
    into
        role
        (name, id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        role
        (name, id) 
    values
        (?, default)
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
Hibernate: 
    select
        count(*) 
    from
        persons pe1_0
Hibernate: 
    insert 
    into
        persons
        (agreement_id, birth_date, black_listed, email, first_name, gender, is_enabled, last_name, password, person_code, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        persons
        (agreement_id, birth_date, black_listed, email, first_name, gender, is_enabled, last_name, password, person_code, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        persons
        (agreement_id, birth_date, black_listed, email, first_name, gender, is_enabled, last_name, password, person_code, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        count(*) 
    from
        country ce1_0
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
2025-08-21T12:42:20.861+03:00  INFO 1236 --- [    Test worker] .r.v.TravelCalculatePremiumRequestLogger : REQUEST: {"agreement":{"agreementDateFrom":"2028-03-15T00:00:00","agreementDateTo":"2028-03-31T23:59:59","countriesToVisit":[null],"insuranceLimit":10000,"agreementPremium":null,"selectedRisks":["TRAVEL_MEDICAL"],"uuid":"2f998026-55f7-4686-8501-c2cbb87314b1","persons":[{"personCode":"A-12345","firstName":null,"lastName":null,"birthDate":"1950-03-15","risks":[],"personPremium":null,"blackListed":false,"password":"StrongPass123","email":"vasja@example.com","gender":"Male","roles":["ROLE_USER"],"verificationTokens":[],"isEnabled":false},{"personCode":"B-54321","firstName":null,"lastName":null,"birthDate":"2010-02-23","risks":[],"personPremium":null,"blackListed":false,"password":"AnotherPass456","email":"petja@example.com","gender":"Male","roles":["ROLE_USER"],"verificationTokens":[],"isEnabled":false},{"personCode":"C-67890","firstName":null,"lastName":null,"birthDate":"1975-01-01","risks":[],"personPremium":null,"blackListed":false,"password":"Pass789Strong","email":"sergej@example.com","gender":"Male","roles":["ROLE_ADMIN"],"verificationTokens":[],"isEnabled":false}]}}
2025-08-21T12:42:20.861+03:00  INFO 1236 --- [    Test worker] .r.v.TravelCalculatePremiumRequestLogger : REQUEST LOGGING TIME: 3 ms
2025-08-21T12:42:20.862+03:00  INFO 1236 --- [    Test worker] .n.c.s.TravelCalculatePremiumServiceImpl : Calculating premium for agreement: AgreementDto(agreementDateFrom=2028-03-15T00:00, agreementDateTo=2028-03-31T23:59:59, countriesToVisit=[null], insuranceLimit=10000, agreementPremium=null, selectedRisks=[TRAVEL_MEDICAL], persons=[PersonDto(personCode=A-12345, firstName=null, lastName=null, birthDate=1950-03-15, risks=[], personPremium=null, blackListed=false, password=StrongPass123, isEnabled=false, email=vasja@example.com, gender=Male, roles=[ROLE_USER], verificationTokens=[]), PersonDto(personCode=B-54321, firstName=null, lastName=null, birthDate=2010-02-23, risks=[], personPremium=null, blackListed=false, password=AnotherPass456, isEnabled=false, email=petja@example.com, gender=Male, roles=[ROLE_USER], verificationTokens=[]), PersonDto(personCode=C-67890, firstName=null, lastName=null, birthDate=1975-01-01, risks=[], personPremium=null, blackListed=false, password=Pass789Strong, isEnabled=false, email=sergej@example.com, gender=Male, roles=[ROLE_ADMIN], verificationTokens=[])], uuid=2f998026-55f7-4686-8501-c2cbb87314b1)
2025-08-21T12:42:20.862+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Validating country for medical risk. Selected risks: [TRAVEL_MEDICAL], Country : [null]
2025-08-21T12:42:20.862+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Country validation passed.
2025-08-21T12:42:20.865+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : Validate agreementDateFrom
2025-08-21T12:42:20.865+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : AgreementDateFrom is 2028-03-15T00:00
2025-08-21T12:42:20.865+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Validating selected risks: [TRAVEL_MEDICAL]
2025-08-21T12:42:20.865+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : Risk 'TRAVEL_MEDICAL' valid? true
2025-08-21T12:42:20.865+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Selected risks are valid.
2025-08-21T12:42:20.866+03:00  INFO 1236 --- [    Test worker] .n.c.s.TravelCalculatePremiumServiceImpl : Validation result: 1 errors found
2025-08-21T12:42:20.866+03:00  WARN 1236 --- [    Test worker] o.n.core.service.TravelResponseBuilder   : Building response with validation errors: [ValidationErrorDto[errorCode=countriesToVisit, description=ERROR_CODE_23]]
2025-08-21T12:42:20.867+03:00  INFO 1236 --- [    Test worker] r.v.TravelCalculatePremiumResponseLogger : RESPONSE: {"errors":[{"errorCode":"countriesToVisit","description":"ERROR_CODE_23"}],"agreement":{"agreementDateFrom":null,"agreementDateTo":null,"countriesToVisit":[],"insuranceLimit":null,"agreementPremium":null,"selectedRisks":[],"uuid":null,"persons":[]}}
2025-08-21T12:42:20.867+03:00  INFO 1236 --- [    Test worker] r.v.TravelCalculatePremiumResponseLogger : RESPONSE TIME: 1ms
2025-08-21T12:42:20.867+03:00  INFO 1236 --- [    Test worker] org.javaguru.travel.insurance.app        : Some general application log message
2025-08-21T12:42:20.872+03:00  INFO 1236 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: 
    drop table if exists agreement cascade 
Hibernate: 
    drop table if exists agreement_countries cascade 
Hibernate: 
    drop table if exists agreement_proposals cascade 
Hibernate: 
    drop table if exists agreement_risks cascade 
Hibernate: 
    drop table if exists agreements_xml_export cascade 
Hibernate: 
    drop table if exists country cascade 
Hibernate: 
    drop table if exists country_default_day_rate cascade 
Hibernate: 
    drop table if exists password_reset_token cascade 
Hibernate: 
    drop table if exists persons cascade 
Hibernate: 
    drop table if exists refresh_token cascade 
Hibernate: 
    drop table if exists role cascade 
Hibernate: 
    drop table if exists user_roles cascade 
Hibernate: 
    drop table if exists verification_token cascade 
2025-08-21T12:42:20.875+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown initiated...
2025-08-21T12:42:20.876+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.5)

2025-08-21T12:42:20.890+03:00  INFO 1236 --- [    Test worker] o.n.r.InvalidCountryEntityRequestsTest   : Starting InvalidCountryEntityRequestsTest using Java 21.0.5 with PID 1236 (started by User in C:\Users\User\IdeaProjects\Travel-Insurance-Calculator\backend\application_V2\insurance-calculator-app)
2025-08-21T12:42:20.890+03:00  INFO 1236 --- [    Test worker] o.n.r.InvalidCountryEntityRequestsTest   : The following 1 profile is active: "test"
2025-08-21T12:42:21.043+03:00  INFO 1236 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-21T12:42:21.053+03:00  INFO 1236 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 10 JPA repository interfaces.
2025-08-21T12:42:21.143+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Starting...
2025-08-21T12:42:21.148+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-6 - Added connection conn50: url=jdbc:h2:mem:testdb user=SA
2025-08-21T12:42:21.148+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Start completed.
2025-08-21T12:42:21.174+03:00  INFO 1236 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-21T12:42:21.179+03:00  INFO 1236 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-21T12:42:21.183+03:00  INFO 1236 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-21T12:42:21.315+03:00  INFO 1236 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists agreement cascade 
Hibernate: 
    drop table if exists agreement_countries cascade 
Hibernate: 
    drop table if exists agreement_proposals cascade 
Hibernate: 
    drop table if exists agreement_risks cascade 
Hibernate: 
    drop table if exists agreements_xml_export cascade 
Hibernate: 
    drop table if exists country cascade 
Hibernate: 
    drop table if exists country_default_day_rate cascade 
Hibernate: 
    drop table if exists password_reset_token cascade 
Hibernate: 
    drop table if exists persons cascade 
Hibernate: 
    drop table if exists refresh_token cascade 
Hibernate: 
    drop table if exists role cascade 
Hibernate: 
    drop table if exists user_roles cascade 
Hibernate: 
    drop table if exists verification_token cascade 
Hibernate: 
    create table agreement (
        agreement_premium numeric(38,2),
        insurance_limit numeric(38,2),
        agreement_date_from timestamp(6),
        agreement_date_to timestamp(6),
        id bigint generated by default as identity,
        uuid uuid not null,
        primary key (id)
    )
Hibernate: 
    create table agreement_countries (
        agreement_id bigint not null,
        country_id bigint not null
    )
Hibernate: 
    create table agreement_proposals (
        already_generated char(1) not null check (already_generated in ('N','Y')),
        date_from timestamp(6) not null,
        date_to timestamp(6) not null,
        id bigint generated by default as identity,
        agreement_uuid uuid,
        person_first_name varchar(255) not null,
        person_last_name varchar(255) not null,
        proposal_file_path varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table agreement_risks (
        agreement_id bigint not null,
        risk varchar(255)
    )
Hibernate: 
    create table agreements_xml_export (
        already_exported boolean not null,
        id bigint generated by default as identity,
        agreement_uuid varchar(36) not null unique,
        primary key (id)
    )
Hibernate: 
    create table country (
        id bigint generated by default as identity,
        country_code varchar(255) not null unique,
        country_name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table country_default_day_rate (
        default_day_rate numeric(38,2) not null,
        id integer generated by default as identity,
        country_name varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    create table password_reset_token (
        expiration_date timestamp(6),
        id bigint generated by default as identity,
        user_id bigint,
        token varchar(255),
        primary key (id)
    )
Hibernate: 
    create table persons (
        birth_date date not null,
        black_listed boolean not null,
        is_enabled boolean not null,
        agreement_id bigint,
        id bigint generated by default as identity,
        email varchar(255),
        first_name varchar(255) not null,
        gender varchar(255),
        last_name varchar(255) not null,
        password varchar(255),
        person_code varchar(255) not null,
        primary key (id),
        unique (first_name, last_name, person_code)
    )
Hibernate: 
    create table refresh_token (
        expiry_date timestamp(6),
        id bigint generated by default as identity,
        user_id bigint unique,
        token varchar(255) unique,
        primary key (id)
    )
Hibernate: 
    create table role (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id),
        unique (name)
    )
Hibernate: 
    create table user_roles (
        role_id bigint not null,
        user_id bigint not null
    )
Hibernate: 
    create table verification_token (
        expiration_date timestamp(6),
        id bigint generated by default as identity,
        user_id bigint,
        token varchar(255),
        primary key (id)
    )
Hibernate: 
    alter table if exists agreement_countries 
       add constraint FKb3vlrcfevfu0yev7apmp9mdof 
       foreign key (country_id) 
       references country
Hibernate: 
    alter table if exists agreement_countries 
       add constraint FKnmqj2otf0xnviy7gnt5k2ueb1 
       foreign key (agreement_id) 
       references agreement
Hibernate: 
    alter table if exists agreement_risks 
       add constraint FK8uooqi970alchskpgl7oxmlsf 
       foreign key (agreement_id) 
       references agreement
Hibernate: 
    alter table if exists password_reset_token 
       add constraint FKo04psjdr9t9w9kh9qm5f1pkh5 
       foreign key (user_id) 
       references persons
Hibernate: 
    alter table if exists persons 
       add constraint FKci0joxe418gq8f9j4qh8adgkt 
       foreign key (agreement_id) 
       references agreement
Hibernate: 
    alter table if exists refresh_token 
       add constraint FKdl44lsavd7ahmdorqptjybuem 
       foreign key (user_id) 
       references persons
Hibernate: 
    alter table if exists user_roles 
       add constraint FKrhfovtciq1l558cw6udg0h0d3 
       foreign key (role_id) 
       references role
Hibernate: 
    alter table if exists user_roles 
       add constraint FKhqwikqsvr67y0u1mddk8lpkae 
       foreign key (user_id) 
       references persons
Hibernate: 
    alter table if exists verification_token 
       add constraint FKl36ub1ot7o0h52yuvmw7tl3bm 
       foreign key (user_id) 
       references persons
2025-08-21T12:42:21.328+03:00  INFO 1236 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-21T12:42:21.486+03:00  WARN 1236 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-21T12:42:21.532+03:00  INFO 1236 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4cab4983, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@61854689, org.springframework.security.web.context.SecurityContextHolderFilter@5402d2df, org.springframework.security.web.header.HeaderWriterFilter@61fcf04e, org.springframework.web.filter.CorsFilter@7906c433, org.springframework.security.web.authentication.logout.LogoutFilter@572f458a, org.nikita.core.security.jwt.AuthTokenFilter@6ac8fe9e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@26fece5e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2086244f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f4937e4, org.springframework.security.web.session.SessionManagementFilter@256f39c, org.springframework.security.web.access.ExceptionTranslationFilter@248ac089, org.springframework.security.web.access.intercept.AuthorizationFilter@16c605e2]
2025-08-21T12:42:21.604+03:00  INFO 1236 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-21T12:42:21.618+03:00  INFO 1236 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-21T12:42:21.618+03:00  INFO 1236 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-21T12:42:21.618+03:00  INFO 1236 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2025-08-21T12:42:21.624+03:00  INFO 1236 --- [   scheduling-1] o.nikita.jobs.AgreementXmlExporterJob    : Starting AgreementXmlExporterJob with thread pool size 4
2025-08-21T12:42:21.624+03:00  INFO 1236 --- [    Test worker] o.n.r.InvalidCountryEntityRequestsTest   : Started InvalidCountryEntityRequestsTest in 0.746 seconds (process running for 17.353)
Hibernate: 
    select
        ae1_0.uuid 
    from
        agreement ae1_0
2025-08-21T12:42:21.626+03:00  INFO 1236 --- [   scheduling-1] o.nikita.jobs.AgreementXmlExporterJob    : No agreements found to export.
Hibernate: 
    select
        count(*) 
    from
        role r1_0
Hibernate: 
    insert 
    into
        role
        (name, id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        role
        (name, id) 
    values
        (?, default)
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
Hibernate: 
    select
        count(*) 
    from
        persons pe1_0
Hibernate: 
    insert 
    into
        persons
        (agreement_id, birth_date, black_listed, email, first_name, gender, is_enabled, last_name, password, person_code, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        persons
        (agreement_id, birth_date, black_listed, email, first_name, gender, is_enabled, last_name, password, person_code, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        persons
        (agreement_id, birth_date, black_listed, email, first_name, gender, is_enabled, last_name, password, person_code, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        count(*) 
    from
        country ce1_0
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
2025-08-21T12:42:21.825+03:00  INFO 1236 --- [    Test worker] .r.v.TravelCalculatePremiumRequestLogger : REQUEST: {"agreement":{"agreementDateFrom":"2028-03-15T00:00:00","agreementDateTo":"2028-03-31T23:59:59","countriesToVisit":[""],"insuranceLimit":10000,"agreementPremium":null,"selectedRisks":["TRAVEL_MEDICAL"],"uuid":"2f998026-55f7-4686-8501-c2cbb87314b1","persons":[{"personCode":"A-12345","firstName":null,"lastName":null,"birthDate":"1950-03-15","risks":[],"personPremium":null,"blackListed":false,"password":"StrongPass123","email":"vasja@example.com","gender":"Male","roles":["ROLE_USER"],"verificationTokens":[],"isEnabled":false},{"personCode":"B-54321","firstName":null,"lastName":null,"birthDate":"2010-02-23","risks":[],"personPremium":null,"blackListed":false,"password":"AnotherPass456","email":"petja@example.com","gender":"Male","roles":["ROLE_USER"],"verificationTokens":[],"isEnabled":false},{"personCode":"C-67890","firstName":null,"lastName":null,"birthDate":"1975-01-01","risks":[],"personPremium":null,"blackListed":false,"password":"Pass789Strong","email":"sergej@example.com","gender":"Male","roles":["ROLE_ADMIN"],"verificationTokens":[],"isEnabled":false}]}}
2025-08-21T12:42:21.825+03:00  INFO 1236 --- [    Test worker] .r.v.TravelCalculatePremiumRequestLogger : REQUEST LOGGING TIME: 2 ms
2025-08-21T12:42:21.825+03:00  INFO 1236 --- [    Test worker] .n.c.s.TravelCalculatePremiumServiceImpl : Calculating premium for agreement: AgreementDto(agreementDateFrom=2028-03-15T00:00, agreementDateTo=2028-03-31T23:59:59, countriesToVisit=[], insuranceLimit=10000, agreementPremium=null, selectedRisks=[TRAVEL_MEDICAL], persons=[PersonDto(personCode=A-12345, firstName=null, lastName=null, birthDate=1950-03-15, risks=[], personPremium=null, blackListed=false, password=StrongPass123, isEnabled=false, email=vasja@example.com, gender=Male, roles=[ROLE_USER], verificationTokens=[]), PersonDto(personCode=B-54321, firstName=null, lastName=null, birthDate=2010-02-23, risks=[], personPremium=null, blackListed=false, password=AnotherPass456, isEnabled=false, email=petja@example.com, gender=Male, roles=[ROLE_USER], verificationTokens=[]), PersonDto(personCode=C-67890, firstName=null, lastName=null, birthDate=1975-01-01, risks=[], personPremium=null, blackListed=false, password=Pass789Strong, isEnabled=false, email=sergej@example.com, gender=Male, roles=[ROLE_ADMIN], verificationTokens=[])], uuid=2f998026-55f7-4686-8501-c2cbb87314b1)
2025-08-21T12:42:21.826+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Validating country for medical risk. Selected risks: [TRAVEL_MEDICAL], Country : []
2025-08-21T12:42:21.826+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Country validation passed.
2025-08-21T12:42:21.826+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : Validate agreementDateFrom
2025-08-21T12:42:21.826+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : AgreementDateFrom is 2028-03-15T00:00
2025-08-21T12:42:21.826+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Validating selected risks: [TRAVEL_MEDICAL]
2025-08-21T12:42:21.826+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : Risk 'TRAVEL_MEDICAL' valid? true
2025-08-21T12:42:21.826+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Selected risks are valid.
2025-08-21T12:42:21.826+03:00  INFO 1236 --- [    Test worker] .n.c.s.TravelCalculatePremiumServiceImpl : Validation result: 1 errors found
2025-08-21T12:42:21.826+03:00  WARN 1236 --- [    Test worker] o.n.core.service.TravelResponseBuilder   : Building response with validation errors: [ValidationErrorDto[errorCode=countriesToVisit, description=ERROR_CODE_23]]
2025-08-21T12:42:21.827+03:00  INFO 1236 --- [    Test worker] r.v.TravelCalculatePremiumResponseLogger : RESPONSE: {"errors":[{"errorCode":"countriesToVisit","description":"ERROR_CODE_23"}],"agreement":{"agreementDateFrom":null,"agreementDateTo":null,"countriesToVisit":[],"insuranceLimit":null,"agreementPremium":null,"selectedRisks":[],"uuid":null,"persons":[]}}
2025-08-21T12:42:21.827+03:00  INFO 1236 --- [    Test worker] r.v.TravelCalculatePremiumResponseLogger : RESPONSE TIME: 0ms
2025-08-21T12:42:21.827+03:00  INFO 1236 --- [    Test worker] org.javaguru.travel.insurance.app        : Some general application log message
2025-08-21T12:42:21.831+03:00  INFO 1236 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: 
    drop table if exists agreement cascade 
Hibernate: 
    drop table if exists agreement_countries cascade 
Hibernate: 
    drop table if exists agreement_proposals cascade 
Hibernate: 
    drop table if exists agreement_risks cascade 
Hibernate: 
    drop table if exists agreements_xml_export cascade 
Hibernate: 
    drop table if exists country cascade 
Hibernate: 
    drop table if exists country_default_day_rate cascade 
Hibernate: 
    drop table if exists password_reset_token cascade 
Hibernate: 
    drop table if exists persons cascade 
Hibernate: 
    drop table if exists refresh_token cascade 
Hibernate: 
    drop table if exists role cascade 
Hibernate: 
    drop table if exists user_roles cascade 
Hibernate: 
    drop table if exists verification_token cascade 
2025-08-21T12:42:21.835+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Shutdown initiated...
2025-08-21T12:42:21.835+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.5)

2025-08-21T12:42:21.850+03:00  INFO 1236 --- [    Test worker] o.n.r.InvalidCountryEntityRequestsTest   : Starting InvalidCountryEntityRequestsTest using Java 21.0.5 with PID 1236 (started by User in C:\Users\User\IdeaProjects\Travel-Insurance-Calculator\backend\application_V2\insurance-calculator-app)
2025-08-21T12:42:21.850+03:00  INFO 1236 --- [    Test worker] o.n.r.InvalidCountryEntityRequestsTest   : The following 1 profile is active: "test"
2025-08-21T12:42:21.988+03:00  INFO 1236 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-21T12:42:21.996+03:00  INFO 1236 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 10 JPA repository interfaces.
2025-08-21T12:42:22.072+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-7 - Starting...
2025-08-21T12:42:22.076+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-7 - Added connection conn60: url=jdbc:h2:mem:testdb user=SA
2025-08-21T12:42:22.077+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-7 - Start completed.
2025-08-21T12:42:22.087+03:00  INFO 1236 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-21T12:42:22.089+03:00  INFO 1236 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-21T12:42:22.093+03:00  INFO 1236 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-21T12:42:22.201+03:00  INFO 1236 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists agreement cascade 
Hibernate: 
    drop table if exists agreement_countries cascade 
Hibernate: 
    drop table if exists agreement_proposals cascade 
Hibernate: 
    drop table if exists agreement_risks cascade 
Hibernate: 
    drop table if exists agreements_xml_export cascade 
Hibernate: 
    drop table if exists country cascade 
Hibernate: 
    drop table if exists country_default_day_rate cascade 
Hibernate: 
    drop table if exists password_reset_token cascade 
Hibernate: 
    drop table if exists persons cascade 
Hibernate: 
    drop table if exists refresh_token cascade 
Hibernate: 
    drop table if exists role cascade 
Hibernate: 
    drop table if exists user_roles cascade 
Hibernate: 
    drop table if exists verification_token cascade 
Hibernate: 
    create table agreement (
        agreement_premium numeric(38,2),
        insurance_limit numeric(38,2),
        agreement_date_from timestamp(6),
        agreement_date_to timestamp(6),
        id bigint generated by default as identity,
        uuid uuid not null,
        primary key (id)
    )
Hibernate: 
    create table agreement_countries (
        agreement_id bigint not null,
        country_id bigint not null
    )
Hibernate: 
    create table agreement_proposals (
        already_generated char(1) not null check (already_generated in ('N','Y')),
        date_from timestamp(6) not null,
        date_to timestamp(6) not null,
        id bigint generated by default as identity,
        agreement_uuid uuid,
        person_first_name varchar(255) not null,
        person_last_name varchar(255) not null,
        proposal_file_path varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table agreement_risks (
        agreement_id bigint not null,
        risk varchar(255)
    )
Hibernate: 
    create table agreements_xml_export (
        already_exported boolean not null,
        id bigint generated by default as identity,
        agreement_uuid varchar(36) not null unique,
        primary key (id)
    )
Hibernate: 
    create table country (
        id bigint generated by default as identity,
        country_code varchar(255) not null unique,
        country_name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table country_default_day_rate (
        default_day_rate numeric(38,2) not null,
        id integer generated by default as identity,
        country_name varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    create table password_reset_token (
        expiration_date timestamp(6),
        id bigint generated by default as identity,
        user_id bigint,
        token varchar(255),
        primary key (id)
    )
Hibernate: 
    create table persons (
        birth_date date not null,
        black_listed boolean not null,
        is_enabled boolean not null,
        agreement_id bigint,
        id bigint generated by default as identity,
        email varchar(255),
        first_name varchar(255) not null,
        gender varchar(255),
        last_name varchar(255) not null,
        password varchar(255),
        person_code varchar(255) not null,
        primary key (id),
        unique (first_name, last_name, person_code)
    )
Hibernate: 
    create table refresh_token (
        expiry_date timestamp(6),
        id bigint generated by default as identity,
        user_id bigint unique,
        token varchar(255) unique,
        primary key (id)
    )
Hibernate: 
    create table role (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id),
        unique (name)
    )
Hibernate: 
    create table user_roles (
        role_id bigint not null,
        user_id bigint not null
    )
Hibernate: 
    create table verification_token (
        expiration_date timestamp(6),
        id bigint generated by default as identity,
        user_id bigint,
        token varchar(255),
        primary key (id)
    )
Hibernate: 
    alter table if exists agreement_countries 
       add constraint FKb3vlrcfevfu0yev7apmp9mdof 
       foreign key (country_id) 
       references country
Hibernate: 
    alter table if exists agreement_countries 
       add constraint FKnmqj2otf0xnviy7gnt5k2ueb1 
       foreign key (agreement_id) 
       references agreement
Hibernate: 
    alter table if exists agreement_risks 
       add constraint FK8uooqi970alchskpgl7oxmlsf 
       foreign key (agreement_id) 
       references agreement
Hibernate: 
    alter table if exists password_reset_token 
       add constraint FKo04psjdr9t9w9kh9qm5f1pkh5 
       foreign key (user_id) 
       references persons
Hibernate: 
    alter table if exists persons 
       add constraint FKci0joxe418gq8f9j4qh8adgkt 
       foreign key (agreement_id) 
       references agreement
Hibernate: 
    alter table if exists refresh_token 
       add constraint FKdl44lsavd7ahmdorqptjybuem 
       foreign key (user_id) 
       references persons
Hibernate: 
    alter table if exists user_roles 
       add constraint FKrhfovtciq1l558cw6udg0h0d3 
       foreign key (role_id) 
       references role
Hibernate: 
    alter table if exists user_roles 
       add constraint FKhqwikqsvr67y0u1mddk8lpkae 
       foreign key (user_id) 
       references persons
Hibernate: 
    alter table if exists verification_token 
       add constraint FKl36ub1ot7o0h52yuvmw7tl3bm 
       foreign key (user_id) 
       references persons
2025-08-21T12:42:22.210+03:00  INFO 1236 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-21T12:42:22.383+03:00  WARN 1236 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-21T12:42:22.427+03:00  INFO 1236 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5ce2c999, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@570354c5, org.springframework.security.web.context.SecurityContextHolderFilter@3ae88a25, org.springframework.security.web.header.HeaderWriterFilter@469dffae, org.springframework.web.filter.CorsFilter@742573d5, org.springframework.security.web.authentication.logout.LogoutFilter@770f9cbc, org.nikita.core.security.jwt.AuthTokenFilter@7e17250b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ee8bdf8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27a15304, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58f79eeb, org.springframework.security.web.session.SessionManagementFilter@bf4b664, org.springframework.security.web.access.ExceptionTranslationFilter@35102484, org.springframework.security.web.access.intercept.AuthorizationFilter@1157a527]
2025-08-21T12:42:22.496+03:00  INFO 1236 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-21T12:42:22.510+03:00  INFO 1236 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-21T12:42:22.510+03:00  INFO 1236 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-21T12:42:22.510+03:00  INFO 1236 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2025-08-21T12:42:22.520+03:00  INFO 1236 --- [   scheduling-1] o.nikita.jobs.AgreementXmlExporterJob    : Starting AgreementXmlExporterJob with thread pool size 4
2025-08-21T12:42:22.520+03:00  INFO 1236 --- [    Test worker] o.n.r.InvalidCountryEntityRequestsTest   : Started InvalidCountryEntityRequestsTest in 0.683 seconds (process running for 18.249)
Hibernate: 
    select
        ae1_0.uuid 
    from
        agreement ae1_0
Hibernate: 
    select
        count(*) 
    from
        role r1_0
2025-08-21T12:42:22.522+03:00  INFO 1236 --- [   scheduling-1] o.nikita.jobs.AgreementXmlExporterJob    : No agreements found to export.
Hibernate: 
    insert 
    into
        role
        (name, id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        role
        (name, id) 
    values
        (?, default)
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
Hibernate: 
    select
        r1_0.id,
        r1_0.name 
    from
        role r1_0 
    where
        r1_0.name=?
Hibernate: 
    select
        count(*) 
    from
        persons pe1_0
Hibernate: 
    insert 
    into
        persons
        (agreement_id, birth_date, black_listed, email, first_name, gender, is_enabled, last_name, password, person_code, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        persons
        (agreement_id, birth_date, black_listed, email, first_name, gender, is_enabled, last_name, password, person_code, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        persons
        (agreement_id, birth_date, black_listed, email, first_name, gender, is_enabled, last_name, password, person_code, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        count(*) 
    from
        country ce1_0
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        country
        (country_code, country_name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
2025-08-21T12:42:22.730+03:00  INFO 1236 --- [    Test worker] .r.v.TravelCalculatePremiumRequestLogger : REQUEST: {"agreement":{"agreementDateFrom":"2028-03-15T00:00:00","agreementDateTo":"2028-03-31T23:59:59","countriesToVisit":["USA","Spain"],"insuranceLimit":10000,"agreementPremium":null,"selectedRisks":["TRAVEL_MEDICAL"],"uuid":"2f998026-55f7-4686-8501-c2cbb87314b1","persons":[{"personCode":"A-12345","firstName":"Vasja","lastName":"Pupkin","birthDate":"1950-03-15","risks":[],"personPremium":null,"blackListed":false,"password":"StrongPass123","email":"vasja@example.com","gender":"Male","roles":["ROLE_USER"],"verificationTokens":[],"isEnabled":false},{"personCode":"B-54321","firstName":"Petja","lastName":"Pupkin","birthDate":"2010-02-23","risks":[],"personPremium":null,"blackListed":false,"password":"AnotherPass456","email":"petja@example.com","gender":"Male","roles":["ROLE_USER"],"verificationTokens":[],"isEnabled":false},{"personCode":"C-67890","firstName":"Sergej","lastName":"Pupkin","birthDate":"1975-01-01","risks":[],"personPremium":null,"blackListed":false,"password":"Pass789Strong","email":"sergej@example.com","gender":"Male","roles":["ROLE_ADMIN"],"verificationTokens":[],"isEnabled":false}]}}
2025-08-21T12:42:22.730+03:00  INFO 1236 --- [    Test worker] .r.v.TravelCalculatePremiumRequestLogger : REQUEST LOGGING TIME: 2 ms
2025-08-21T12:42:22.730+03:00  INFO 1236 --- [    Test worker] .n.c.s.TravelCalculatePremiumServiceImpl : Calculating premium for agreement: AgreementDto(agreementDateFrom=2028-03-15T00:00, agreementDateTo=2028-03-31T23:59:59, countriesToVisit=[USA, Spain], insuranceLimit=10000, agreementPremium=null, selectedRisks=[TRAVEL_MEDICAL], persons=[PersonDto(personCode=A-12345, firstName=Vasja, lastName=Pupkin, birthDate=1950-03-15, risks=[], personPremium=null, blackListed=false, password=StrongPass123, isEnabled=false, email=vasja@example.com, gender=Male, roles=[ROLE_USER], verificationTokens=[]), PersonDto(personCode=B-54321, firstName=Petja, lastName=Pupkin, birthDate=2010-02-23, risks=[], personPremium=null, blackListed=false, password=AnotherPass456, isEnabled=false, email=petja@example.com, gender=Male, roles=[ROLE_USER], verificationTokens=[]), PersonDto(personCode=C-67890, firstName=Sergej, lastName=Pupkin, birthDate=1975-01-01, risks=[], personPremium=null, blackListed=false, password=Pass789Strong, isEnabled=false, email=sergej@example.com, gender=Male, roles=[ROLE_ADMIN], verificationTokens=[])], uuid=2f998026-55f7-4686-8501-c2cbb87314b1)
2025-08-21T12:42:22.730+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Validating country for medical risk. Selected risks: [TRAVEL_MEDICAL], Country : [USA, Spain]
2025-08-21T12:42:22.730+03:00  INFO 1236 --- [    Test worker] .n.c.v.a.c.ValidateCountryForMedicalRisk : ValidateCountryForMedicalRisk: Country validation passed.
2025-08-21T12:42:22.730+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : Validate agreementDateFrom
2025-08-21T12:42:22.730+03:00  INFO 1236 --- [    Test worker] o.n.c.v.a.date.VAgreementDateFrom        : AgreementDateFrom is 2028-03-15T00:00
2025-08-21T12:42:22.731+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Validating selected risks: [TRAVEL_MEDICAL]
2025-08-21T12:42:22.731+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : Risk 'TRAVEL_MEDICAL' valid? true
2025-08-21T12:42:22.731+03:00  INFO 1236 --- [    Test worker] o.n.c.v.agreement.ValidateSelectedRisks  : ValidateSelectedRisks: Selected risks are valid.
2025-08-21T12:42:22.731+03:00  INFO 1236 --- [    Test worker] .n.c.s.TravelCalculatePremiumServiceImpl : Validation result: 0 errors found
2025-08-21T12:42:22.731+03:00  INFO 1236 --- [    Test worker] o.n.c.u.SelectedRisksPremiumCalculator   : Calculated premiums for selected risks: [RiskDto(riskIc=TRAVEL_MEDICAL, premium=540.00)]
2025-08-21T12:42:22.732+03:00  INFO 1236 --- [    Test worker] o.n.c.u.SelectedRisksPremiumCalculator   : Calculated premiums for selected risks: [RiskDto(riskIc=TRAVEL_MEDICAL, premium=288.00)]
2025-08-21T12:42:22.732+03:00  INFO 1236 --- [    Test worker] o.n.c.u.SelectedRisksPremiumCalculator   : Calculated premiums for selected risks: [RiskDto(riskIc=TRAVEL_MEDICAL, premium=468.00)]
2025-08-21T12:42:22.732+03:00  INFO 1236 --- [    Test worker] o.n.c.m.ProposalGeneratorQueueSenderStub : ProposalGeneratorQueueSenderStub initialized
2025-08-21T12:42:22.734+03:00 ERROR 1236 --- [    Test worker] o.n.c.m.ProposalGeneratorQueueSenderStub : Error converting AgreementDto to JSON

com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (or disable `MapperFeature.REQUIRE_HANDLERS_FOR_JAVA8_TIMES`) (through reference chain: org.nikita.api.dto.AgreementDto["agreementDateFrom"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77) ~[jackson-databind-2.19.0.jar:2.19.0]
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1359) ~[jackson-databind-2.19.0.jar:2.19.0]
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:34) ~[jackson-databind-2.19.0.jar:2.19.0]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.19.0.jar:2.19.0]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:760) ~[jackson-databind-2.19.0.jar:2.19.0]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183) ~[jackson-databind-2.19.0.jar:2.19.0]
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:503) ~[jackson-databind-2.19.0.jar:2.19.0]
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:342) ~[jackson-databind-2.19.0.jar:2.19.0]
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4859) ~[jackson-databind-2.19.0.jar:2.19.0]
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:4079) ~[jackson-databind-2.19.0.jar:2.19.0]
	at org.nikita.core.messagebroker.ProposalGeneratorQueueSenderStub.send(ProposalGeneratorQueueSenderStub.java:21) ~[main/:na]
	at org.nikita.core.service.TravelCalculatePremiumServiceImpl.calculatePremium(TravelCalculatePremiumServiceImpl.java:74) ~[main/:na]
	at org.nikita.core.service.TravelCalculatePremiumServiceImpl.calculatePremium(TravelCalculatePremiumServiceImpl.java:39) ~[main/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354) ~[spring-aop-6.1.6.jar:6.1.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.6.jar:6.1.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.6.jar:6.1.6]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.6.jar:6.1.6]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.6.jar:6.1.6]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.6.jar:6.1.6]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.6.jar:6.1.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.6.jar:6.1.6]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.6.jar:6.1.6]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720) ~[spring-aop-6.1.6.jar:6.1.6]
	at org.nikita.core.service.TravelCalculatePremiumServiceImpl$$SpringCGLIB$$0.calculatePremium(<generated>) ~[main/:na]
	at org.nikita.rest.v1.TravelCalculatePremiumControllerV1.calculatePremium(TravelCalculatePremiumControllerV1.java:31) ~[main/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354) ~[spring-aop-6.1.6.jar:6.1.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.6.jar:6.1.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.6.jar:6.1.6]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.6.jar:6.1.6]
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.6.jar:6.1.6]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.6.jar:6.1.6]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720) ~[spring-aop-6.1.6.jar:6.1.6]
	at org.nikita.rest.v1.TravelCalculatePremiumControllerV1$$SpringCGLIB$$6.calculatePremium(<generated>) ~[main/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.6.jar:6.1.6]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.20.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72) ~[spring-test-6.1.6.jar:6.1.6]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165) ~[spring-test-6.1.6.jar:6.1.6]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.1.6.jar:6.1.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151) ~[spring-test-6.1.6.jar:6.1.6]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.1.6.jar:6.1.6]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.nikita.core.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:59) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.2.4.jar:6.2.4]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.6.jar:6.1.6]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.2.4.jar:6.2.4]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151) ~[spring-test-6.1.6.jar:6.1.6]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.1.6.jar:6.1.6]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151) ~[spring-test-6.1.6.jar:6.1.6]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.1.6.jar:6.1.6]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151) ~[spring-test-6.1.6.jar:6.1.6]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.1.6.jar:6.1.6]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151) ~[spring-test-6.1.6.jar:6.1.6]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.1.6.jar:6.1.6]
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201) ~[spring-test-6.1.6.jar:6.1.6]
	at org.nikita.rest.TravelCalculatePremiumControllerTest.executeAndCompare(TravelCalculatePremiumControllerTest.java:46) ~[test/:na]
	at org.nikita.rest.InvalidCountryEntityRequestsTest.shouldPassWhenCountryIsValid(InvalidCountryEntityRequestsTest.java:35) ~[test/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728) ~[junit-platform-commons-1.10.2.jar:1.10.2]
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89) ~[na:na]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[na:na]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[na:na]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[na:na]
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[na:na]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66) ~[na:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:na]

2025-08-21T12:42:22.737+03:00  INFO 1236 --- [    Test worker] o.n.core.service.TravelResponseBuilder   : Building response with calculated premium for agreement: AgreementDto(agreementDateFrom=2028-03-15T00:00, agreementDateTo=2028-03-31T23:59:59, countriesToVisit=[USA, Spain], insuranceLimit=10000, agreementPremium=1296.00, selectedRisks=[TRAVEL_MEDICAL], persons=[PersonDto(personCode=A-12345, firstName=Vasja, lastName=Pupkin, birthDate=1950-03-15, risks=[RiskDto(riskIc=TRAVEL_MEDICAL, premium=540.00)], personPremium=540.00, blackListed=false, password=StrongPass123, isEnabled=false, email=vasja@example.com, gender=Male, roles=[ROLE_USER], verificationTokens=[]), PersonDto(personCode=B-54321, firstName=Petja, lastName=Pupkin, birthDate=2010-02-23, risks=[RiskDto(riskIc=TRAVEL_MEDICAL, premium=288.00)], personPremium=288.00, blackListed=false, password=AnotherPass456, isEnabled=false, email=petja@example.com, gender=Male, roles=[ROLE_USER], verificationTokens=[]), PersonDto(personCode=C-67890, firstName=Sergej, lastName=Pupkin, birthDate=1975-01-01, risks=[RiskDto(riskIc=TRAVEL_MEDICAL, premium=468.00)], personPremium=468.00, blackListed=false, password=Pass789Strong, isEnabled=false, email=sergej@example.com, gender=Male, roles=[ROLE_ADMIN], verificationTokens=[])], uuid=2f998026-55f7-4686-8501-c2cbb87314b1)
2025-08-21T12:42:22.739+03:00  INFO 1236 --- [    Test worker] r.v.TravelCalculatePremiumResponseLogger : RESPONSE: {"agreement":{"agreementDateFrom":"2028-03-15T00:00:00","agreementDateTo":"2028-03-31T23:59:59","countriesToVisit":["USA","Spain"],"insuranceLimit":10000,"agreementPremium":1296.00,"selectedRisks":["TRAVEL_MEDICAL"],"uuid":"2f998026-55f7-4686-8501-c2cbb87314b1","persons":[{"personCode":"A-12345","firstName":"Vasja","lastName":"Pupkin","birthDate":"1950-03-15","risks":[{"riskIc":"TRAVEL_MEDICAL","premium":540.00}],"personPremium":"540,00","blackListed":false,"password":"StrongPass123","email":"vasja@example.com","gender":"Male","roles":["ROLE_USER"],"verificationTokens":[],"isEnabled":false},{"personCode":"B-54321","firstName":"Petja","lastName":"Pupkin","birthDate":"2010-02-23","risks":[{"riskIc":"TRAVEL_MEDICAL","premium":288.00}],"personPremium":"288,00","blackListed":false,"password":"AnotherPass456","email":"petja@example.com","gender":"Male","roles":["ROLE_USER"],"verificationTokens":[],"isEnabled":false},{"personCode":"C-67890","firstName":"Sergej","lastName":"Pupkin","birthDate":"1975-01-01","risks":[{"riskIc":"TRAVEL_MEDICAL","premium":468.00}],"personPremium":"468,00","blackListed":false,"password":"Pass789Strong","email":"sergej@example.com","gender":"Male","roles":["ROLE_ADMIN"],"verificationTokens":[],"isEnabled":false}]}}
2025-08-21T12:42:22.739+03:00  INFO 1236 --- [    Test worker] r.v.TravelCalculatePremiumResponseLogger : RESPONSE TIME: 1ms
2025-08-21T12:42:22.739+03:00  INFO 1236 --- [    Test worker] org.javaguru.travel.insurance.app        : Some general application log message
2025-08-21T12:42:22.752+03:00  INFO 1236 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: 
    drop table if exists agreement cascade 
Hibernate: 
    drop table if exists agreement_countries cascade 
Hibernate: 
    drop table if exists agreement_proposals cascade 
Hibernate: 
    drop table if exists agreement_risks cascade 
Hibernate: 
    drop table if exists agreements_xml_export cascade 
Hibernate: 
    drop table if exists country cascade 
Hibernate: 
    drop table if exists country_default_day_rate cascade 
Hibernate: 
    drop table if exists password_reset_token cascade 
Hibernate: 
    drop table if exists persons cascade 
Hibernate: 
    drop table if exists refresh_token cascade 
Hibernate: 
    drop table if exists role cascade 
Hibernate: 
    drop table if exists user_roles cascade 
Hibernate: 
    drop table if exists verification_token cascade 
2025-08-21T12:42:22.758+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-7 - Shutdown initiated...
2025-08-21T12:42:22.759+03:00  INFO 1236 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-7 - Shutdown completed.
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
