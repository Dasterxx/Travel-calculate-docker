plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'com.palantir.docker'
}

group = 'org.nikita'
version = '1.0.2'

repositories {
    mavenCentral()
}

def springBootVersion = '3.2.5'
def jacksonVersion = '2.19.0'

ext['jackson.version'] = jacksonVersion
dependencyManagement {
    imports {
        mavenBom "com.fasterxml.jackson:jackson-bom:${jacksonVersion}"
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-validation:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion"
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    implementation "org.springframework.boot:spring-boot-starter-cache:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-security:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-mail:$springBootVersion"

    implementation("org.springframework.boot:spring-boot-starter-amqp:$springBootVersion")

    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'


    implementation 'org.liquibase:liquibase-core:4.31.1'
    implementation 'com.h2database:h2:2.3.232'
    implementation 'org.modelmapper:modelmapper:3.2.3'
    implementation 'com.google.guava:guava:33.4.0-jre'
    implementation 'org.postgresql:postgresql:42.7.5'

    testImplementation 'uk.org.webcompere:model-assert:1.0.0'
    testImplementation 'net.javacrumbs.json-unit:json-unit:4.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation "org.springframework.security:spring-security-test:6.4.2"
    testImplementation 'org.mockito:mockito-core:5.15.2'
    testImplementation 'io.cucumber:cucumber-java:7.15.0'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.15.0'
    testImplementation 'org.junit.platform:junit-platform-suite-api:1.13.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.2'

    implementation "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
}

test {
    useJUnitPlatform()
    systemProperty "spring.profiles.active", "test"
}

tasks.docker.dependsOn bootJar

tasks.named('dockerPrepare') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

bootBuildImage {
    imageName = "insurance-calculator-app:${project.version}"
}

docker {
    name "${project.name.toLowerCase()}:${project.version}"
    files 'build/libs/*.jar'
    dockerfile file('Dockerfile')
}
